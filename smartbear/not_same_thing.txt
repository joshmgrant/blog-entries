Title - Automated Test Design: Single Use vs Reusable Tests

Abstract - 

-Opening Slide, thanks to SmartBear, other (Ron, Adam, Lorinda)

-Tweet: "Not the same thing..."

-Instant Cup of Soup vs Noodle Bar
-Not the same thing!
-Cup of Soup, Hot Water, Bowl
-And That's It!
-Noodle bar
-"Not the same thing!"
-Patrons, Menus, DÃ©cor, Staffing, Budgets
-Lots of things don't even apply
-Cup of soup 

-Complexity
-Little complexity in the cup of soup
-First idea: lots of cups of soup!
-Bad idea for many reasons
-Lots of complexity in noodle bar
-Users, Approaches, App Under Test, Platforms
- changing requirements
- to automate or not?
- automation is development
- test code is code, should be developed as such

-Value
-value is clear in cup of soup
-what value does noodle bar provide? why do people go? 
-Budgets
-again, to automate or not
-what adds value to your product
-time and resources

-Maintenance
-no maintenance in cup of soup
-dirty tables, dish washer
- Steve Ballmer
-easily the biggest consideration
-tests rot like code
-technical debt (like code)

-Tooling
-No tooling in cup of tea (mug or cup? add salt or pepper?)
-Lots of tools in noodle bar (noodle cooker if possible)
-some tools make more sense (sushi counter, rice cooker) than others (not appliciable tools)
- source control/history
- editors/languages
- 3rd party considerations
- other utilities

-Teamwork
-Cup of soup is designed for one person
-Noodle bar is not
-"It's always a people problem" 
-One person or several?
-Existing team or new team?

-Conclusion (blank slide?)